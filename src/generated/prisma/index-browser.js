
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nickname: 'nickname',
  name: 'name',
  email: 'email',
  password: 'password',
  profileImageUrl: 'profileImageUrl',
  gender: 'gender',
  birth: 'birth',
  phoneNumber: 'phoneNumber',
  point: 'point',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RankingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  rank: 'rank',
  previousRank: 'previousRank',
  tier: 'tier',
  totalPoints: 'totalPoints',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QuestScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  type: 'type',
  rewardPts: 'rewardPts',
  createdAt: 'createdAt',
  goal: 'goal'
};

exports.Prisma.RoomParticipantScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roomId: 'roomId',
  role: 'role',
  joinedAt: 'joinedAt',
  endAt: 'endAt',
  side: 'side'
};

exports.Prisma.AiJudgementScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  confidence: 'confidence',
  details: 'details',
  createdAt: 'createdAt'
};

exports.Prisma.AiSummaryScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  summary: 'summary',
  createdAt: 'createdAt'
};

exports.Prisma.UserItemScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  itemId: 'itemId',
  acquiredAt: 'acquiredAt',
  isEquipped: 'isEquipped'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  category: 'category',
  icon: 'icon',
  createdAt: 'createdAt'
};

exports.Prisma.BattleRoomScalarFieldEnum = {
  id: 'id',
  admin: 'admin',
  topicA: 'topicA',
  topicB: 'topicB',
  status: 'status',
  createdAt: 'createdAt',
  startedAt: 'startedAt',
  endedAt: 'endedAt',
  approvalNum: 'approvalNum',
  oppositeNum: 'oppositeNum'
};

exports.Prisma.BattleTitleScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  title: 'title',
  suggestedBy: 'suggestedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  side: 'side'
};

exports.Prisma.QuestCompletionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  questId: 'questId',
  isCompleted: 'isCompleted',
  completedAt: 'completedAt',
  rewardClaimed: 'rewardClaimed',
  progress: 'progress'
};

exports.Prisma.PointTransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  change: 'change',
  reason: 'reason',
  createdAt: 'createdAt'
};

exports.Prisma.ChatMessageScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  userId: 'userId',
  side: 'side',
  message: 'message',
  createdAt: 'createdAt'
};

exports.Prisma.BattleVoteScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  userId: 'userId',
  vote: 'vote',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  nickname: 'nickname',
  name: 'name',
  email: 'email',
  password: 'password',
  profileImageUrl: 'profileImageUrl',
  gender: 'gender',
  phoneNumber: 'phoneNumber'
};

exports.Prisma.RankingOrderByRelevanceFieldEnum = {
  tier: 'tier'
};

exports.Prisma.QuestOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  type: 'type'
};

exports.Prisma.RoomParticipantOrderByRelevanceFieldEnum = {
  role: 'role',
  side: 'side'
};

exports.Prisma.AiJudgementOrderByRelevanceFieldEnum = {
  details: 'details'
};

exports.Prisma.AiSummaryOrderByRelevanceFieldEnum = {
  summary: 'summary'
};

exports.Prisma.ItemOrderByRelevanceFieldEnum = {
  name: 'name',
  category: 'category',
  icon: 'icon'
};

exports.Prisma.BattleRoomOrderByRelevanceFieldEnum = {
  topicA: 'topicA',
  topicB: 'topicB',
  status: 'status'
};

exports.Prisma.BattleTitleOrderByRelevanceFieldEnum = {
  title: 'title',
  suggestedBy: 'suggestedBy',
  side: 'side'
};

exports.Prisma.PointTransactionOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.ChatMessageOrderByRelevanceFieldEnum = {
  side: 'side',
  message: 'message'
};

exports.Prisma.BattleVoteOrderByRelevanceFieldEnum = {
  vote: 'vote'
};


exports.Prisma.ModelName = {
  User: 'User',
  Ranking: 'Ranking',
  Quest: 'Quest',
  RoomParticipant: 'RoomParticipant',
  AiJudgement: 'AiJudgement',
  AiSummary: 'AiSummary',
  UserItem: 'UserItem',
  Item: 'Item',
  BattleRoom: 'BattleRoom',
  BattleTitle: 'BattleTitle',
  QuestCompletion: 'QuestCompletion',
  PointTransaction: 'PointTransaction',
  ChatMessage: 'ChatMessage',
  BattleVote: 'BattleVote'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
